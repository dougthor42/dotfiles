" ===========================================================================
" Doug's vimrc file.
" ===========================================================================

" Copied from /etc/share/vim/vimrc and modified.


" ===========================================================================
" General Setup
" ===========================================================================
" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" This is actually not needed: http://stackoverflow.com/a/5845583/1354930
" and will actually override `vim -C`
set nocompatible

set encoding=utf-8

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" Set lots of colors :-)
set t_Co=256

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"endif

" Have Vim load indentation rules and plugins according to the detected filetype.
if has("autocmd")
  filetype plugin indent on
endif

" General Config (aka: I can't think of a name to group these...)
" ==============
set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
"set autowrite		" Automatically save before commands like :next and :make
set hidden		" Hide buffers when they are abandoned
"set mouse=a		" Enable mouse usage (all modes)
set number              " Enable line numbers
set history=100		" Buffer history size
set laststatus=2	" Always display the status line.

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

" Indenting
" =========
set nowrap
"set tabstop=4
"set expandtab
set smartindent
set autoindent

" Search Settings
" ===============
set hlsearch
set incsearch		" Incremental search
set ignorecase		" Do case insensitive matching
set smartcase		" ...unless an uppercase is typed

" Commands
" ========
let mapleader="\\"
" Map '\rr' to reload the .vimrc file.
map <leader>rr :source ~/.vim/vimrc<CR>

" Folding
" =======
"set foldmethod=indent		" Fold based on indent
"set foldnestmax=3		" Deepest fold is 3 levels
"set nofoldenable		" Don't fold by default

" Completion
" ==========

" Scrolling
" =========
set scrolloff=8          " Start scrolling when 8 lines away from margins
set sidescrolloff=15     " or 15 columns away from the edge.


" ===========================================================================
" Plugins 
" ===========================================================================

" Insallation via vim-plug
" ========================
call plug#begin('~/.vim/plugged')
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/syntastic'
Plug 'altercation/vim-colors-solarized'
Plug 'valloric/youcompleteme'
Plug 'itchyny/lightline.vim'
Plug 'airblade/vim-gitgutter'
Plug 'dhruvasagar/vim-table-mode'
Plug 'tpope/vim-fugitive'
call plug#end()


" ===========================================================================
" Plugin Options
" ===========================================================================

" NERD Commenter
" ==============
" Add spaces after comment delims
let g:NERDSpaceDelims = 1    

" Align comments left instead of following code indentation
let g:NERDDefaultAlign = 1   

" Comment and invert empty lines
let g:NERDCommentEmptyLines = 1

" Trim trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1

" Solarized
" =========
let g:solarized_termcolors = 256
set background=dark
" colorscheme solarized

" YouCompleteMe
" =============
" Add '\jd' and F12 as shortcuts for GoTo. F12 mimics Visual Studio
nmap <leader>jd :YcmCompleter GoTo<CR>
nmap <F12> :YcmCompleter GoTo<CR>

" NERD Tree
" =========

" Syntastic
" =========
set statusline+=%#warnings#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" Table Mode
" ==========
" Use ReST-compatible tables
let g:table_mode_corner_corner="+"
let g:table_mode_header_fillchar="="

" LightLine
" =========
let g:lightline = {
	\ 'colorscheme': 'wombat',
	\ 'active': {
	\   'left': [ [ 'mode' ],
	\	      [ 'fugitive', 'filename', 'modified' ] ]
	\ },
	\ 'separator': { 'left': '|', 'right': '|' },
	\ 'subseparator': { 'left': "|", 'right': "|" },
	\ 'component_function': {
	\   	'modified': 'LightlineModified',
	\ },
	\ 'component_expand': {
	\   'fugitive': 'LightlineFugitive',
	\ },
	\ 'component_type': {
	\   'fugitive': 'warning',
	\ },
	\ }

function! LightlineFugitive()
  return exists("*fugitive#head") ? fugitive#head() : ''
endfunction

function! LightlineModified()
  return &modified ? "+" : ''
endfunction


" ===========================================================================
" End Plugins 
" ===========================================================================

" Default color scheme
" ====================
" Use a built-in color schem so that things look nice even if the plugins
" can't load.
set background=dark
colorscheme desert

