#
# General gitconfig
#
# '#' or ';' is a line comment.
#

[user]
	name = Douglas Thor
	email = doug.thor@gmail.com
	# TODO: set this per computer.
	signingkey = 811D308AA7C10FA2  # dthor1.roam.corp.google.com
	# signingkey = 10A8CB5928819595  # dthor2.c.googles.com
	# signingkey = 5358825FD5B58AAB  # dthor-pyledev.c.googlers.com
	# signingkey = 1C22730EC26ED6FB!  # odin
	  # Note the trailing "!". See https://stackoverflow.com/a/50986820/1354930
	# signingkey = 65E2E3EA0BF59145  # yggdrasil
	# signingkey = 5CAA2B3B1017CED7  # midgard
[core]
	eof=lf
	autocrlf = input
	editor = vim
	filemode = false		# Ignore file modes (chmod)
	# Use diff-highlight if possible so that individual word changes are
	# highlighted. On gLinux, /usr/share/doc/git/contrib/diff-highlight
	# must be added to $PATH
	# See https://yaqs.corp.google.com/eng/q/5365110896984064 and
	# https://stackoverflow.com/a/15149253/1354930
	pager = "(diff-highlight 2>/dev/null || cat) | ${PAGER:-less}"
[push]
	default = simple
	gpgsign = if-asked
[pager]
	branch = false
[alias]
	# Show which files have been changed most often.
	code-changes = "!git log --format=format: --name-only | /bin/grep -E -v '^$' | sort | uniq -c | sort -rg | head -n 10"
	cc = "!git code-changes"
	# Prune any local squashed-and-merged branches.
	# Usage:
	#   git prune-squash-merged
	#   git prune-squash-merged -n
	#   git prune-squash-merged --dry-run
	prune-squash-merged = "!bash $HOME/dotfiles/git_prune_squash_merged.sh"
	# Show the full history for a file.
	history = "!git log -p -M --follow --stat --"
	# Show branch origins
	show-branch-origin = "!bash $HOME/dotfiles/git_show_branch_origin.sh"
	# Print what the previous checked-out branch was.
	# Useful for "previewing" `git checkout -`
	last-branch = "!git rev-parse --symbolic-full-name --abbrev-ref=loose @{-1}"
[commit]
	gpgsign = true
[tag]
	gpgsign = true
[diff]
	wsErrorHighlight = all
[interactive]
	# Also use diff-highlight during `git add -p`, etc.
	diffFilter = "(diff-highlight 2>/dev/null || cat)"
